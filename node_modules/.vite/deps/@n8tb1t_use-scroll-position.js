import {
  require_react
} from "./chunk-ABDRZE5M.js";
import {
  __commonJS
} from "./chunk-LFBQMW2U.js";

// node_modules/@n8tb1t/use-scroll-position/lib/useIsomorphicLayoutEffect.js
var require_useIsomorphicLayoutEffect = __commonJS({
  "node_modules/@n8tb1t/use-scroll-position/lib/useIsomorphicLayoutEffect.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useIsomorphicLayoutEffect = void 0;
    var react_1 = require_react();
    exports.useIsomorphicLayoutEffect = typeof window !== "undefined" ? react_1.useLayoutEffect : react_1.useEffect;
  }
});

// node_modules/@n8tb1t/use-scroll-position/lib/useScrollPosition.js
var require_useScrollPosition = __commonJS({
  "node_modules/@n8tb1t/use-scroll-position/lib/useScrollPosition.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useScrollPosition = void 0;
    var react_1 = require_react();
    var useIsomorphicLayoutEffect_1 = require_useIsomorphicLayoutEffect();
    var isBrowser = typeof window !== `undefined`;
    var zeroPosition = { x: 0, y: 0 };
    var getClientRect = (element) => element === null || element === void 0 ? void 0 : element.getBoundingClientRect();
    var getScrollPosition = ({ element, useWindow, boundingElement }) => {
      if (!isBrowser) {
        return zeroPosition;
      }
      if (useWindow) {
        return { x: window.scrollX, y: window.scrollY };
      }
      const targetPosition = getClientRect((element === null || element === void 0 ? void 0 : element.current) || document.body);
      const containerPosition = getClientRect(boundingElement === null || boundingElement === void 0 ? void 0 : boundingElement.current);
      if (!targetPosition) {
        return zeroPosition;
      }
      return containerPosition ? {
        x: (containerPosition.x || 0) - (targetPosition.x || 0),
        y: (containerPosition.y || 0) - (targetPosition.y || 0)
      } : { x: targetPosition.left, y: targetPosition.top };
    };
    exports.useScrollPosition = (effect, deps, element, useWindow, wait, boundingElement) => {
      const position = react_1.useRef(getScrollPosition({ useWindow, boundingElement }));
      let throttleTimeout = null;
      const callBack = () => {
        const currPos = getScrollPosition({ element, useWindow, boundingElement });
        effect({ prevPos: position.current, currPos });
        position.current = currPos;
        throttleTimeout = null;
      };
      useIsomorphicLayoutEffect_1.useIsomorphicLayoutEffect(() => {
        var _a;
        if (!isBrowser) {
          return void 0;
        }
        const handleScroll = () => {
          if (wait) {
            if (throttleTimeout === null) {
              throttleTimeout = setTimeout(callBack, wait);
            }
          } else {
            callBack();
          }
        };
        if (boundingElement) {
          (_a = boundingElement.current) === null || _a === void 0 ? void 0 : _a.addEventListener("scroll", handleScroll, { passive: true });
        } else {
          window.addEventListener("scroll", handleScroll, { passive: true });
        }
        return () => {
          var _a2;
          if (boundingElement) {
            (_a2 = boundingElement.current) === null || _a2 === void 0 ? void 0 : _a2.removeEventListener("scroll", handleScroll);
          } else {
            window.removeEventListener("scroll", handleScroll);
          }
          if (throttleTimeout) {
            clearTimeout(throttleTimeout);
          }
        };
      }, deps);
    };
    exports.useScrollPosition.defaultProps = {
      deps: [],
      element: false,
      useWindow: false,
      wait: null,
      boundingElement: false
    };
  }
});

// node_modules/@n8tb1t/use-scroll-position/lib/index.js
var require_lib = __commonJS({
  "node_modules/@n8tb1t/use-scroll-position/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var useScrollPosition_1 = require_useScrollPosition();
    Object.defineProperty(exports, "useScrollPosition", { enumerable: true, get: function() {
      return useScrollPosition_1.useScrollPosition;
    } });
  }
});
export default require_lib();
//# sourceMappingURL=@n8tb1t_use-scroll-position.js.map
